stages:
  - build
  - publish


.template/build/manylinux: &template-build-manylinux
  stage: build
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - yum install -y capnproto
    - ${PYBIN}/pip install poetry-core setuptools capnpy
    - ${PYBIN}/pip wheel . --no-deps --no-build-isolation -w dist
    - auditwheel repair dist/*.whl
    - rm dist/*manylinux_2_17_x86_64.whl
  artifacts:
    paths:
      - dist

build/manylinux/3.10:
  <<: *template-build-manylinux
  variables:
    PYBIN: /opt/python/cp310-cp310/bin

build/manylinux/3.11:
  <<: *template-build-manylinux
  variables:
    PYBIN: /opt/python/cp311-cp311/bin

build/manylinux/pypy:
  stage: build
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - yum install -y capnproto
    - ${PYBIN}/pip install poetry-core setuptools capnpy
    - ${PYBIN}/pip wheel . --no-deps --no-build-isolation -w dist
    - old=$(ls -1 dist/*pp310-pypy310_pp73*.whl)
    - new=$(echo $old | sed -e 's/pp310-pypy310_pp73-manylinux_2_17_x86_64/py3-none-any/')
    - mv -v "$old" "$new"
  artifacts:
    paths:
      - dist
  variables:
    PYBIN: /opt/python/pp310-pypy310_pp73/bin

build/sdist:
  stage: build
  script:
    - python -m pip install --upgrade pip
    - pip install poetry twine
    - poetry build --format sdist
  artifacts:
    paths:
      - dist

list_wheels:
  stage: publish
  script:
    - python -m pip install --upgrade pip
    - pip freeze
    - pip install twine
    - ls -lh dist