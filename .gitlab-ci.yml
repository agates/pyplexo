stages:
  - build
  - publish


.template/build/manylinux: &template-build-manylinux
  stage: build
  image: quay.io/pypa/manylinux2014_x86_64
  #before_script:
  #  - sh ./pre-build.sh
  script:
    - yum install -y capnproto
    - ${PYBIN}/pip install poetry-core setuptools capnpy
    - ${PYBIN}/pip wheel . -w ./dist --no-deps --no-build-isolation -w wheelhouse
    - auditwheel repair wheelhouse/*.whl
    - rm wheelhouse/*manylinux_2_17_x86_64.whl
  artifacts:
    paths:
      - wheelhouse

build/manylinux/3.10:
  <<: *template-build-manylinux
  variables:
    PYBIN: /opt/python/cp310-cp310/bin

build/manylinux/3.11:
  <<: *template-build-manylinux
  variables:
    PYBIN: /opt/python/cp311-cp311/bin

build/manylinux/pypy:
  stage: build
  image: quay.io/pypa/manylinux2014_x86_64
  #before_script:
  #  - sh ./pre-build.sh
  script:
    - yum install -y capnproto
    - ${PYBIN}/pip install poetry-core setuptools capnpy
    - ${PYBIN}/pip wheel . -w ./dist --no-deps --no-build-isolation -w wheelhouse
    - old=$(ls -1 dist/*pp310-pypy310_pp73*.whl)
    - new=$(echo $old | sed -e 's/pp310-pypy310_pp73-manylinux_2_17_x86_64/py3-none-any/')
    - sudo mv -v "$old" "$new"
  artifacts:
    paths:
      - wheelhouse
  variables:
    PYBIN: /opt/python/pp310-pypy310_pp73/bin

list_wheels:
  stage: publish
  script:
    - ls -lh wheelhouse